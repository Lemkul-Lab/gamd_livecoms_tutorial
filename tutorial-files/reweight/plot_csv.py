# python script to generate FES surface from GaMD simulations
# First generated by MDP, edited and maintained by HMM

# load python packages 
from __future__ import print_function
import sys, os
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
from scipy.interpolate import griddata
from matplotlib import colors

# load input file and specify output name and zcutoff
file_input = sys.argv[1]
png_name   = sys.argv[2]
zcutoff    = sys.argv[3] # similar to Emax

zcutoff = int(zcutoff)

def make_colormap(cmap, alpha):
	my_cmap_rgb = plt.get_cmap(cmap)(np.arange(256))

	for i in range(3): # Do not include the last column!
		my_cmap_rgb[:,i] = (1 - alpha) + alpha*my_cmap_rgb[:,i]
	my_cmap = mpl.colors.ListedColormap(my_cmap_rgb, name='my_cmap')

	return my_cmap


## LOAD FREE ENERGY SURFACE DATA ##
data_file = np.loadtxt(file_input,delimiter='\t')

# specify what columns to pull data from 
x = data_file[:,0]
y = data_file[:,1]
z = data_file[:,2]

# set up mesh grid with an evenly spaced interval
# GRID DATA METHODS: https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html
xcli = np.linspace(min(x), max(x), 50)
ycli = np.linspace(min(y), max(y), 50)
X, Y = np.meshgrid(xcli, ycli)

Z = griddata((x, y), z, (X, Y), method='linear')
Znorm = np.where(Z > zcutoff, zcutoff, Z) # creates a maximum cutoff by replacing everything above zcutoff to zcutoff.

# generate colormap and choose color scheme
my_cmap = make_colormap(cmap='viridis_r', alpha=1)

# size of outputted image
plt.figure(figsize=(10,8))

# specify outlining
contour_levels = [0,1,2,3,4,5,6,7,8,9,10]
plt.contour(X, Y, Znorm, \
            contour_levels, \
            colors="black" , \
            alpha=1, \
            linewidths=0.5, \
            linestyles="dashed", \
            extend="neither")

# add contour labels if you want
#plt.clabel(contour, \
#            inline=True, \
#            fontsize=12)

# display grid data map as an image
# using gaussian interpolation to smooth out the data surface
# INTERPOLATION METHODS: https://matplotlib.org/stable/gallery/images_contours_and_fields/interpolation_methods.html
plt.imshow(Znorm, \
           extent=[min(x),max(x),min(y),max(y)], \
           aspect="auto", \
           origin="lower", \
           cmap=my_cmap, \
           interpolation="gaussian", \
           vmin=min(z), vmax=zcutoff)


## CREATE COLORBAR ##
cbar1 = plt.colorbar(orientation="vertical", shrink=0.85, pad=0.05)
cbar1.ax.set_yticks(range(0,zcutoff+1,1))
#cbar1.ax.set_yticklabels(['0','1', '2', '3', '4', '5', '6'], size=22)
cbar1.set_label('PMF (kcal/mol)', size=22, labelpad=20)


## PLOT TITLE AND AXIS LABELS ##
# set plot title
#plt.title('a title here')

# set x axis
plt.xlabel("$\phi$ (degrees)", size=22)
plt.xlim(-180,180)
plt.xticks(np.arange(-180,181,60),size=18)

# set y axis
plt.ylabel("$\psi$ (degrees)", size=22)
plt.ylim(-180,180)
plt.yticks(np.arange(-180,181,60), size=18)

# generate png file 
plt.savefig(png_name, dpi=300)

# show the plot 
plt.show()
